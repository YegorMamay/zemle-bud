@import "../core/variables";
@import "../core/mixins";

$advanced-mode: false;

.container {
    &,
    &-fluid {
        width: 100%;
        padding-right: $grid-gutter-width / 2;
        padding-left: $grid-gutter-width / 2;
        margin-right: auto;
        margin-left: auto;
    }
}

.container {
    @if ($advanced-mode) {

        @each $breakpoint, $max-width in $container-max-widths {

            $min: map-get($grid-breakpoints, $breakpoint);
            $min: if($min != 0, $min, null);

            @if $min {
                @media (min-width: $min) {
                    max-width: $max-width;
                }
            }

        }

    } @else {

        $max: map-get($grid-breakpoints, 'xl');
        $max-width: map-get($container-max-widths, 'xl');

        @media (min-width: $max) {
            max-width: $max-width;
        }

    }
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-right: -$grid-gutter-width / 2;
    margin-left: -$grid-gutter-width / 2;
}

.no-gutters {
    margin-right: 0;
    margin-left: 0;

    > .col,
    > [class*='col-'] {
        padding-right: 0;
        padding-left: 0;
    }
}

%grid-column {
    position: relative;
    width: 100%;
    padding-right: $grid-gutter-width / 2;
    padding-left: $grid-gutter-width / 2;
}

@each $breakpoint in map-keys($grid-breakpoints) {
    $min: map-get($grid-breakpoints, $breakpoint);
    $min: if($min != 0, $min, null);

    $infix: if($min == null, '', '-#{$breakpoint}');

    @for $i from 1 through $grid-columns {
        .col#{$infix}-#{$i} {
            @extend %grid-column;
        }
    }

    .col#{$infix},
    .col#{$infix}-auto {
        @extend %grid-column;
    }

    @include media-breakpoint-up($breakpoint) {
        .col#{$infix} {
            flex-basis: 0;
            flex-grow: 1;
            max-width: 100%;
        }
        .col#{$infix}-auto {
            flex: 0 0 auto;
            width: auto;
            max-width: 100%;
        }

        @for $i from 1 through $grid-columns {
            .col#{$infix}-#{$i} {
                flex: 0 0 percentage($i / $grid-columns);
                max-width: percentage($i / $grid-columns);
            }
        }

        .order#{$infix}-first {
            order: -1;
        }

        .order#{$infix}-last {
            order: $grid-columns + 1;
        }

        //@for $i from 0 through $grid-columns {
        //    .order#{$infix}-#{$i} { order: $i; }
        //}

        //@for $i from 0 through ($grid-columns - 1) {
        //    @if not ($infix == '' and $i == 0) {
        //        .offset#{$infix}-#{$i} {
        //            $num: $i / $grid-columns;
        //
        //            margin-left: if($num == 0, 0, percentage($num));
        //        }
        //    }
        //}
    }
}
